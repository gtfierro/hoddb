// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TimeFilter int32

const (
	TimeFilter_At     TimeFilter = 0
	TimeFilter_Before TimeFilter = 1
	TimeFilter_After  TimeFilter = 2
)

var TimeFilter_name = map[int32]string{
	0: "At",
	1: "Before",
	2: "After",
}

var TimeFilter_value = map[string]int32{
	"At":     0,
	"Before": 1,
	"After":  2,
}

func (x TimeFilter) String() string {
	return proto.EnumName(TimeFilter_name, int32(x))
}

func (TimeFilter) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

type Pattern int32

const (
	Pattern_Single   Pattern = 0
	Pattern_ZeroOne  Pattern = 1
	Pattern_ZeroPlus Pattern = 2
	Pattern_OnePlus  Pattern = 3
)

var Pattern_name = map[int32]string{
	0: "Single",
	1: "ZeroOne",
	2: "ZeroPlus",
	3: "OnePlus",
}

var Pattern_value = map[string]int32{
	"Single":   0,
	"ZeroOne":  1,
	"ZeroPlus": 2,
	"OnePlus":  3,
}

func (x Pattern) String() string {
	return proto.EnumName(Pattern_name, int32(x))
}

func (Pattern) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{1}
}

type ParseRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParseRequest) Reset()         { *m = ParseRequest{} }
func (m *ParseRequest) String() string { return proto.CompactTextString(m) }
func (*ParseRequest) ProtoMessage()    {}
func (*ParseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

func (m *ParseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseRequest.Unmarshal(m, b)
}
func (m *ParseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseRequest.Marshal(b, m, deterministic)
}
func (m *ParseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseRequest.Merge(m, src)
}
func (m *ParseRequest) XXX_Size() int {
	return xxx_messageInfo_ParseRequest.Size(m)
}
func (m *ParseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParseRequest proto.InternalMessageInfo

func (m *ParseRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type Response struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Variables            []string `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables,omitempty"`
	Rows                 []*Row   `protobuf:"bytes,5,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Response) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Response) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Response) GetVariables() []string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *Response) GetRows() []*Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

type URI struct {
	// full URI
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// variable
	Variable             string   `protobuf:"bytes,3,opt,name=variable,proto3" json:"variable,omitempty"`
	Pattern              Pattern  `protobuf:"varint,4,opt,name=pattern,proto3,enum=proto.Pattern" json:"pattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URI) Reset()         { *m = URI{} }
func (m *URI) String() string { return proto.CompactTextString(m) }
func (*URI) ProtoMessage()    {}
func (*URI) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{2}
}

func (m *URI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URI.Unmarshal(m, b)
}
func (m *URI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URI.Marshal(b, m, deterministic)
}
func (m *URI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URI.Merge(m, src)
}
func (m *URI) XXX_Size() int {
	return xxx_messageInfo_URI.Size(m)
}
func (m *URI) XXX_DiscardUnknown() {
	xxx_messageInfo_URI.DiscardUnknown(m)
}

var xxx_messageInfo_URI proto.InternalMessageInfo

func (m *URI) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *URI) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *URI) GetVariable() string {
	if m != nil {
		return m.Variable
	}
	return ""
}

func (m *URI) GetPattern() Pattern {
	if m != nil {
		return m.Pattern
	}
	return Pattern_Single
}

type Triple struct {
	Subject              *URI     `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Predicate            []*URI   `protobuf:"bytes,2,rep,name=predicate,proto3" json:"predicate,omitempty"`
	Object               *URI     `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Triple) Reset()         { *m = Triple{} }
func (m *Triple) String() string { return proto.CompactTextString(m) }
func (*Triple) ProtoMessage()    {}
func (*Triple) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{3}
}

func (m *Triple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triple.Unmarshal(m, b)
}
func (m *Triple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triple.Marshal(b, m, deterministic)
}
func (m *Triple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triple.Merge(m, src)
}
func (m *Triple) XXX_Size() int {
	return xxx_messageInfo_Triple.Size(m)
}
func (m *Triple) XXX_DiscardUnknown() {
	xxx_messageInfo_Triple.DiscardUnknown(m)
}

var xxx_messageInfo_Triple proto.InternalMessageInfo

func (m *Triple) GetSubject() *URI {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Triple) GetPredicate() []*URI {
	if m != nil {
		return m.Predicate
	}
	return nil
}

func (m *Triple) GetObject() *URI {
	if m != nil {
		return m.Object
	}
	return nil
}

type SelectQuery struct {
	// list of vars to select, including '*'
	Vars []string `protobuf:"bytes,1,rep,name=vars,proto3" json:"vars,omitempty"`
	// list of graphs to select, including '*'
	Graphs []string `protobuf:"bytes,2,rep,name=graphs,proto3" json:"graphs,omitempty"`
	// time filter
	Filter    TimeFilter `protobuf:"varint,3,opt,name=filter,proto3,enum=proto.TimeFilter" json:"filter,omitempty"`
	Timestamp int64      `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//where clause
	Where                []*Triple `protobuf:"bytes,5,rep,name=where,proto3" json:"where,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SelectQuery) Reset()         { *m = SelectQuery{} }
func (m *SelectQuery) String() string { return proto.CompactTextString(m) }
func (*SelectQuery) ProtoMessage()    {}
func (*SelectQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{4}
}

func (m *SelectQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectQuery.Unmarshal(m, b)
}
func (m *SelectQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectQuery.Marshal(b, m, deterministic)
}
func (m *SelectQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectQuery.Merge(m, src)
}
func (m *SelectQuery) XXX_Size() int {
	return xxx_messageInfo_SelectQuery.Size(m)
}
func (m *SelectQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SelectQuery proto.InternalMessageInfo

func (m *SelectQuery) GetVars() []string {
	if m != nil {
		return m.Vars
	}
	return nil
}

func (m *SelectQuery) GetGraphs() []string {
	if m != nil {
		return m.Graphs
	}
	return nil
}

func (m *SelectQuery) GetFilter() TimeFilter {
	if m != nil {
		return m.Filter
	}
	return TimeFilter_At
}

func (m *SelectQuery) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SelectQuery) GetWhere() []*Triple {
	if m != nil {
		return m.Where
	}
	return nil
}

type InsertQuery struct {
	// insert terms
	Insert []*Triple `protobuf:"bytes,1,rep,name=insert,proto3" json:"insert,omitempty"`
	// list of graphs to insert into, including '*'
	Graphs []string `protobuf:"bytes,2,rep,name=graphs,proto3" json:"graphs,omitempty"`
	//where clause
	Where []*Triple `protobuf:"bytes,3,rep,name=where,proto3" json:"where,omitempty"`
	// whether or not to wait for flush to disk
	Blocking             bool     `protobuf:"varint,4,opt,name=blocking,proto3" json:"blocking,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertQuery) Reset()         { *m = InsertQuery{} }
func (m *InsertQuery) String() string { return proto.CompactTextString(m) }
func (*InsertQuery) ProtoMessage()    {}
func (*InsertQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{5}
}

func (m *InsertQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertQuery.Unmarshal(m, b)
}
func (m *InsertQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertQuery.Marshal(b, m, deterministic)
}
func (m *InsertQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertQuery.Merge(m, src)
}
func (m *InsertQuery) XXX_Size() int {
	return xxx_messageInfo_InsertQuery.Size(m)
}
func (m *InsertQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertQuery.DiscardUnknown(m)
}

var xxx_messageInfo_InsertQuery proto.InternalMessageInfo

func (m *InsertQuery) GetInsert() []*Triple {
	if m != nil {
		return m.Insert
	}
	return nil
}

func (m *InsertQuery) GetGraphs() []string {
	if m != nil {
		return m.Graphs
	}
	return nil
}

func (m *InsertQuery) GetWhere() []*Triple {
	if m != nil {
		return m.Where
	}
	return nil
}

func (m *InsertQuery) GetBlocking() bool {
	if m != nil {
		return m.Blocking
	}
	return false
}

type VersionQuery struct {
	Filter               TimeFilter `protobuf:"varint,1,opt,name=filter,proto3,enum=proto.TimeFilter" json:"filter,omitempty"`
	Timestamp            int64      `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Graphs               []string   `protobuf:"bytes,2,rep,name=graphs,proto3" json:"graphs,omitempty"`
	Limit                int64      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VersionQuery) Reset()         { *m = VersionQuery{} }
func (m *VersionQuery) String() string { return proto.CompactTextString(m) }
func (*VersionQuery) ProtoMessage()    {}
func (*VersionQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{6}
}

func (m *VersionQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionQuery.Unmarshal(m, b)
}
func (m *VersionQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionQuery.Marshal(b, m, deterministic)
}
func (m *VersionQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionQuery.Merge(m, src)
}
func (m *VersionQuery) XXX_Size() int {
	return xxx_messageInfo_VersionQuery.Size(m)
}
func (m *VersionQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionQuery.DiscardUnknown(m)
}

var xxx_messageInfo_VersionQuery proto.InternalMessageInfo

func (m *VersionQuery) GetFilter() TimeFilter {
	if m != nil {
		return m.Filter
	}
	return TimeFilter_At
}

func (m *VersionQuery) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *VersionQuery) GetGraphs() []string {
	if m != nil {
		return m.Graphs
	}
	return nil
}

func (m *VersionQuery) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Entity struct {
	EntityKey []byte `protobuf:"bytes,1,opt,name=EntityKey,proto3" json:"EntityKey,omitempty"`
	// handles 1-hop and + and *
	In                   []*Entity_Edge      `protobuf:"bytes,2,rep,name=in,proto3" json:"in,omitempty"`
	Out                  []*Entity_Edge      `protobuf:"bytes,3,rep,name=out,proto3" json:"out,omitempty"`
	Endpoints            []*Entity_Endpoints `protobuf:"bytes,4,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{7}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetEntityKey() []byte {
	if m != nil {
		return m.EntityKey
	}
	return nil
}

func (m *Entity) GetIn() []*Entity_Edge {
	if m != nil {
		return m.In
	}
	return nil
}

func (m *Entity) GetOut() []*Entity_Edge {
	if m != nil {
		return m.Out
	}
	return nil
}

func (m *Entity) GetEndpoints() []*Entity_Endpoints {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

// for nodes
type Entity_Edge struct {
	Predicate            []byte   `protobuf:"bytes,1,opt,name=Predicate,proto3" json:"Predicate,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Pattern              Pattern  `protobuf:"varint,3,opt,name=Pattern,proto3,enum=proto.Pattern" json:"Pattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entity_Edge) Reset()         { *m = Entity_Edge{} }
func (m *Entity_Edge) String() string { return proto.CompactTextString(m) }
func (*Entity_Edge) ProtoMessage()    {}
func (*Entity_Edge) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{7, 0}
}

func (m *Entity_Edge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity_Edge.Unmarshal(m, b)
}
func (m *Entity_Edge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity_Edge.Marshal(b, m, deterministic)
}
func (m *Entity_Edge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity_Edge.Merge(m, src)
}
func (m *Entity_Edge) XXX_Size() int {
	return xxx_messageInfo_Entity_Edge.Size(m)
}
func (m *Entity_Edge) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity_Edge.DiscardUnknown(m)
}

var xxx_messageInfo_Entity_Edge proto.InternalMessageInfo

func (m *Entity_Edge) GetPredicate() []byte {
	if m != nil {
		return m.Predicate
	}
	return nil
}

func (m *Entity_Edge) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Entity_Edge) GetPattern() Pattern {
	if m != nil {
		return m.Pattern
	}
	return Pattern_Single
}

// for edges
type Entity_Endpoints struct {
	Src                  []byte   `protobuf:"bytes,1,opt,name=Src,proto3" json:"Src,omitempty"`
	Dst                  []byte   `protobuf:"bytes,2,opt,name=Dst,proto3" json:"Dst,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entity_Endpoints) Reset()         { *m = Entity_Endpoints{} }
func (m *Entity_Endpoints) String() string { return proto.CompactTextString(m) }
func (*Entity_Endpoints) ProtoMessage()    {}
func (*Entity_Endpoints) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{7, 1}
}

func (m *Entity_Endpoints) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity_Endpoints.Unmarshal(m, b)
}
func (m *Entity_Endpoints) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity_Endpoints.Marshal(b, m, deterministic)
}
func (m *Entity_Endpoints) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity_Endpoints.Merge(m, src)
}
func (m *Entity_Endpoints) XXX_Size() int {
	return xxx_messageInfo_Entity_Endpoints.Size(m)
}
func (m *Entity_Endpoints) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity_Endpoints.DiscardUnknown(m)
}

var xxx_messageInfo_Entity_Endpoints proto.InternalMessageInfo

func (m *Entity_Endpoints) GetSrc() []byte {
	if m != nil {
		return m.Src
	}
	return nil
}

func (m *Entity_Endpoints) GetDst() []byte {
	if m != nil {
		return m.Dst
	}
	return nil
}

type Row struct {
	Values               []*URI   `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Row) Reset()         { *m = Row{} }
func (m *Row) String() string { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()    {}
func (*Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{8}
}

func (m *Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row.Unmarshal(m, b)
}
func (m *Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row.Marshal(b, m, deterministic)
}
func (m *Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row.Merge(m, src)
}
func (m *Row) XXX_Size() int {
	return xxx_messageInfo_Row.Size(m)
}
func (m *Row) XXX_DiscardUnknown() {
	xxx_messageInfo_Row.DiscardUnknown(m)
}

var xxx_messageInfo_Row proto.InternalMessageInfo

func (m *Row) GetValues() []*URI {
	if m != nil {
		return m.Values
	}
	return nil
}

// p2p messages for experiment
type P2PHeader struct {
	Time                 int64    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	From                 []byte   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *P2PHeader) Reset()         { *m = P2PHeader{} }
func (m *P2PHeader) String() string { return proto.CompactTextString(m) }
func (*P2PHeader) ProtoMessage()    {}
func (*P2PHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{9}
}

func (m *P2PHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P2PHeader.Unmarshal(m, b)
}
func (m *P2PHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P2PHeader.Marshal(b, m, deterministic)
}
func (m *P2PHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P2PHeader.Merge(m, src)
}
func (m *P2PHeader) XXX_Size() int {
	return xxx_messageInfo_P2PHeader.Size(m)
}
func (m *P2PHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_P2PHeader.DiscardUnknown(m)
}

var xxx_messageInfo_P2PHeader proto.InternalMessageInfo

func (m *P2PHeader) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *P2PHeader) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

type TupleRequest struct {
	Header *P2PHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// query string
	Definition           *SelectQuery `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TupleRequest) Reset()         { *m = TupleRequest{} }
func (m *TupleRequest) String() string { return proto.CompactTextString(m) }
func (*TupleRequest) ProtoMessage()    {}
func (*TupleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{10}
}

func (m *TupleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TupleRequest.Unmarshal(m, b)
}
func (m *TupleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TupleRequest.Marshal(b, m, deterministic)
}
func (m *TupleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TupleRequest.Merge(m, src)
}
func (m *TupleRequest) XXX_Size() int {
	return xxx_messageInfo_TupleRequest.Size(m)
}
func (m *TupleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TupleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TupleRequest proto.InternalMessageInfo

func (m *TupleRequest) GetHeader() *P2PHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TupleRequest) GetDefinition() *SelectQuery {
	if m != nil {
		return m.Definition
	}
	return nil
}

type TupleUpdate struct {
	Header               *P2PHeader   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Rows                 []*Row       `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	Vars                 []string     `protobuf:"bytes,3,rep,name=vars,proto3" json:"vars,omitempty"`
	Definition           *SelectQuery `protobuf:"bytes,4,opt,name=definition,proto3" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TupleUpdate) Reset()         { *m = TupleUpdate{} }
func (m *TupleUpdate) String() string { return proto.CompactTextString(m) }
func (*TupleUpdate) ProtoMessage()    {}
func (*TupleUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{11}
}

func (m *TupleUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TupleUpdate.Unmarshal(m, b)
}
func (m *TupleUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TupleUpdate.Marshal(b, m, deterministic)
}
func (m *TupleUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TupleUpdate.Merge(m, src)
}
func (m *TupleUpdate) XXX_Size() int {
	return xxx_messageInfo_TupleUpdate.Size(m)
}
func (m *TupleUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TupleUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TupleUpdate proto.InternalMessageInfo

func (m *TupleUpdate) GetHeader() *P2PHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TupleUpdate) GetRows() []*Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

func (m *TupleUpdate) GetVars() []string {
	if m != nil {
		return m.Vars
	}
	return nil
}

func (m *TupleUpdate) GetDefinition() *SelectQuery {
	if m != nil {
		return m.Definition
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.TimeFilter", TimeFilter_name, TimeFilter_value)
	proto.RegisterEnum("proto.Pattern", Pattern_name, Pattern_value)
	proto.RegisterType((*ParseRequest)(nil), "proto.ParseRequest")
	proto.RegisterType((*Response)(nil), "proto.Response")
	proto.RegisterType((*URI)(nil), "proto.URI")
	proto.RegisterType((*Triple)(nil), "proto.Triple")
	proto.RegisterType((*SelectQuery)(nil), "proto.SelectQuery")
	proto.RegisterType((*InsertQuery)(nil), "proto.InsertQuery")
	proto.RegisterType((*VersionQuery)(nil), "proto.VersionQuery")
	proto.RegisterType((*Entity)(nil), "proto.Entity")
	proto.RegisterType((*Entity_Edge)(nil), "proto.Entity.Edge")
	proto.RegisterType((*Entity_Endpoints)(nil), "proto.Entity.Endpoints")
	proto.RegisterType((*Row)(nil), "proto.Row")
	proto.RegisterType((*P2PHeader)(nil), "proto.P2PHeader")
	proto.RegisterType((*TupleRequest)(nil), "proto.TupleRequest")
	proto.RegisterType((*TupleUpdate)(nil), "proto.TupleUpdate")
}

func init() { proto.RegisterFile("log.proto", fileDescriptor_a153da538f858886) }

var fileDescriptor_a153da538f858886 = []byte{
	// 919 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x4f, 0x8f, 0xdb, 0x44,
	0x14, 0xaf, 0xed, 0xc4, 0x89, 0x5f, 0xc2, 0x36, 0x0c, 0x0b, 0x44, 0xa1, 0x42, 0x91, 0x59, 0xa4,
	0x74, 0x41, 0x9b, 0xe2, 0xc2, 0x05, 0xc4, 0xa1, 0xa5, 0x45, 0x5d, 0x40, 0x6a, 0x98, 0xdd, 0xed,
	0x81, 0x9b, 0x13, 0xbf, 0x64, 0x07, 0x9c, 0x19, 0x77, 0x66, 0x92, 0x55, 0x25, 0x24, 0x04, 0x12,
	0x47, 0xb8, 0xf0, 0x01, 0x38, 0xf2, 0x2d, 0xf8, 0x12, 0x7c, 0x05, 0x3e, 0x08, 0x9a, 0xf1, 0xd8,
	0x4e, 0xbb, 0xbb, 0xd2, 0x4a, 0x9c, 0xfc, 0xfe, 0xcd, 0xef, 0xfd, 0xfc, 0xe6, 0xbd, 0x37, 0x10,
	0xe5, 0x62, 0x75, 0x54, 0x48, 0xa1, 0x05, 0x69, 0xdb, 0xcf, 0xe8, 0xce, 0x4a, 0x88, 0x55, 0x8e,
	0xd3, 0xb4, 0x60, 0xd3, 0x94, 0x73, 0xa1, 0x53, 0xcd, 0x04, 0x57, 0x65, 0x50, 0x7c, 0x00, 0xfd,
	0x59, 0x2a, 0x15, 0x52, 0x7c, 0xbe, 0x41, 0xa5, 0xc9, 0x3e, 0xb4, 0x9f, 0x6f, 0x50, 0xbe, 0x18,
	0x7a, 0x63, 0x6f, 0x12, 0xd1, 0x52, 0x89, 0x7f, 0xf7, 0xa0, 0x4b, 0x51, 0x15, 0x82, 0x2b, 0x34,
	0x21, 0x28, 0xa5, 0x90, 0x55, 0x88, 0x55, 0xc8, 0x10, 0x3a, 0x5b, 0x94, 0x8a, 0x09, 0x3e, 0xf4,
	0xc7, 0xde, 0x24, 0xa0, 0x95, 0x6a, 0xe2, 0x17, 0x62, 0xc3, 0xf5, 0x30, 0xb0, 0xf6, 0x52, 0x21,
	0x77, 0x20, 0xda, 0xa6, 0x92, 0xa5, 0xf3, 0x1c, 0xd5, 0xb0, 0x35, 0x0e, 0x26, 0x11, 0x6d, 0x0c,
	0xe4, 0x5d, 0x68, 0x49, 0x71, 0xa1, 0x86, 0xed, 0x71, 0x30, 0xe9, 0x25, 0x50, 0x92, 0x3d, 0xa2,
	0xe2, 0x82, 0x5a, 0x7b, 0xfc, 0x13, 0x04, 0x67, 0xf4, 0xd8, 0x80, 0xf0, 0x74, 0x8d, 0xaa, 0x48,
	0x17, 0xe8, 0xe8, 0x34, 0x06, 0x93, 0x78, 0x9b, 0xe6, 0x1b, 0xb4, 0x84, 0x22, 0x5a, 0x2a, 0x64,
	0x04, 0xdd, 0x2a, 0x8f, 0x65, 0x14, 0xd1, 0x5a, 0x27, 0x13, 0xe8, 0x14, 0xa9, 0xd6, 0x28, 0xf9,
	0xb0, 0x35, 0xf6, 0x26, 0x7b, 0xc9, 0x9e, 0xcb, 0x3c, 0x2b, 0xad, 0xb4, 0x72, 0xc7, 0x3f, 0x42,
	0x78, 0x2a, 0x59, 0x91, 0x23, 0x39, 0x80, 0x8e, 0xda, 0xcc, 0xbf, 0xc7, 0x85, 0xb6, 0x0c, 0x1a,
	0xb6, 0x67, 0xf4, 0x98, 0x56, 0x2e, 0x32, 0x81, 0xa8, 0x90, 0x98, 0xb1, 0x45, 0xaa, 0x0d, 0x9f,
	0xe0, 0x95, 0xb8, 0xc6, 0x49, 0x62, 0x08, 0x45, 0x09, 0x17, 0x5c, 0x82, 0x73, 0x9e, 0xf8, 0x2f,
	0x0f, 0x7a, 0x27, 0x98, 0xe3, 0x42, 0x7f, 0x6b, 0xee, 0x87, 0x10, 0x68, 0x6d, 0x53, 0xa9, 0x86,
	0x9e, 0xad, 0xa3, 0x95, 0xc9, 0x5b, 0x10, 0xae, 0x64, 0x5a, 0x9c, 0x2b, 0x9b, 0x2e, 0xa2, 0x4e,
	0x23, 0x77, 0x21, 0x5c, 0xb2, 0x5c, 0xa3, 0xb4, 0xf8, 0x7b, 0xc9, 0xeb, 0x0e, 0xff, 0x94, 0xad,
	0xf1, 0x4b, 0xeb, 0xa0, 0x2e, 0xc0, 0x94, 0x57, 0xb3, 0x35, 0x2a, 0x9d, 0xae, 0x0b, 0x5b, 0x90,
	0x80, 0x36, 0x06, 0xf2, 0x1e, 0xb4, 0x2f, 0xce, 0x51, 0xa2, 0xbb, 0xa4, 0xd7, 0x2a, 0x1c, 0x5b,
	0x16, 0x5a, 0xfa, 0xe2, 0xdf, 0x3c, 0xe8, 0x1d, 0x73, 0x85, 0xd2, 0x31, 0x7d, 0x1f, 0x42, 0x66,
	0x55, 0xcb, 0xf5, 0xd2, 0x29, 0xe7, 0xbc, 0x96, 0x7c, 0x9d, 0x33, 0xb8, 0x3e, 0xa7, 0xb9, 0xe1,
	0x79, 0x2e, 0x16, 0x3f, 0x30, 0xbe, 0xb2, 0xac, 0xbb, 0xb4, 0xd6, 0xe3, 0x5f, 0x3d, 0xe8, 0x3f,
	0x2b, 0x1b, 0xb3, 0x24, 0xd4, 0x94, 0xc3, 0xfb, 0x7f, 0xe5, 0xb8, 0x8e, 0xf2, 0x3e, 0xb4, 0x73,
	0xb6, 0x66, 0x75, 0xfb, 0x5b, 0x25, 0xfe, 0xdb, 0x87, 0xf0, 0x31, 0xd7, 0x4c, 0xbf, 0x30, 0xb0,
	0xa5, 0xf4, 0x35, 0x96, 0x63, 0xd7, 0xa7, 0x8d, 0x81, 0xc4, 0xe0, 0x33, 0xee, 0x3a, 0x86, 0x38,
	0x6e, 0xa5, 0xf7, 0xe8, 0x71, 0xb6, 0x42, 0xea, 0x33, 0x4e, 0x0e, 0x20, 0x10, 0x1b, 0xed, 0x6a,
	0x72, 0x55, 0x90, 0x71, 0x93, 0x4f, 0x20, 0x42, 0x9e, 0x15, 0x82, 0x71, 0x5d, 0x4e, 0x5c, 0x2f,
	0x79, 0xfb, 0x95, 0xd8, 0xca, 0x4d, 0x9b, 0xc8, 0x51, 0x06, 0x2d, 0x83, 0x61, 0x68, 0xce, 0xea,
	0x0e, 0x76, 0x34, 0x6b, 0x83, 0xf9, 0xcb, 0x67, 0xf5, 0xac, 0xf5, 0x69, 0xa9, 0x98, 0x79, 0x72,
	0x93, 0xe3, 0x9a, 0xed, 0xd2, 0x3c, 0x39, 0x61, 0x34, 0x35, 0x45, 0x70, 0x29, 0xc9, 0x00, 0x82,
	0x13, 0xb9, 0x70, 0x49, 0x8c, 0x68, 0x2c, 0x8f, 0x94, 0x76, 0xe0, 0x46, 0x8c, 0xef, 0x42, 0x40,
	0xc5, 0x85, 0x99, 0x16, 0x3b, 0xd6, 0xca, 0xf5, 0xd3, 0x4b, 0xd3, 0x52, 0x7a, 0xe2, 0xfb, 0x10,
	0xcd, 0x92, 0xd9, 0x13, 0x4c, 0x33, 0x94, 0x66, 0x54, 0xcc, 0x9d, 0x59, 0xf0, 0x80, 0x5a, 0xd9,
	0xd8, 0x96, 0x52, 0xac, 0x1d, 0xbc, 0x95, 0xe3, 0x1c, 0xfa, 0xa7, 0x1b, 0xd3, 0x54, 0x6e, 0x31,
	0x4e, 0x20, 0x3c, 0xb7, 0x08, 0x6e, 0xca, 0x07, 0xd5, 0x9f, 0x54, 0xc8, 0xd4, 0xf9, 0x49, 0x02,
	0x90, 0xe1, 0x92, 0x71, 0xa6, 0xab, 0x65, 0xd8, 0x5c, 0xca, 0xce, 0xd0, 0xd2, 0x9d, 0xa8, 0xf8,
	0x4f, 0x0f, 0x7a, 0x36, 0xdd, 0x59, 0x91, 0x99, 0x72, 0xde, 0x3c, 0x5b, 0xb5, 0x29, 0xfd, 0xab,
	0x37, 0x65, 0xbd, 0x1a, 0x82, 0x9d, 0xd5, 0xf0, 0x32, 0xc3, 0xd6, 0x4d, 0x18, 0x1e, 0x7e, 0x00,
	0xd0, 0x8c, 0x04, 0x09, 0xc1, 0x7f, 0xa0, 0x07, 0xb7, 0x08, 0x40, 0xf8, 0x10, 0x97, 0x42, 0xe2,
	0xc0, 0x23, 0x11, 0xb4, 0x1f, 0x2c, 0x35, 0xca, 0x81, 0x7f, 0xf8, 0x79, 0x7d, 0xef, 0x26, 0xe2,
	0x84, 0xf1, 0x55, 0x8e, 0x83, 0x5b, 0xa4, 0x07, 0x9d, 0xef, 0x50, 0x8a, 0xa7, 0xdc, 0x84, 0xf7,
	0xa1, 0x6b, 0x94, 0x59, 0xbe, 0x51, 0x03, 0xdf, 0xb8, 0x9e, 0x72, 0xb4, 0x4a, 0x90, 0xfc, 0xec,
	0x43, 0xfb, 0x89, 0xc8, 0x1e, 0x3d, 0x24, 0x5f, 0x41, 0x58, 0x12, 0x22, 0x57, 0xf0, 0x1b, 0xdd,
	0xae, 0xfe, 0xd6, 0x3d, 0x4d, 0xf1, 0x3b, 0xbf, 0xfc, 0xf3, 0xef, 0x1f, 0xfe, 0x9b, 0xf1, 0x60,
	0xba, 0xfd, 0x68, 0x7a, 0x2e, 0xb2, 0x6c, 0x3e, 0x55, 0x36, 0xfe, 0x53, 0xef, 0x90, 0x7c, 0x03,
	0x6d, 0xfb, 0xd4, 0x91, 0x37, 0xea, 0x26, 0x6c, 0x1e, 0xbe, 0xd1, 0x15, 0xf8, 0xf1, 0xc8, 0xc2,
	0xed, 0xc7, 0xb7, 0x1b, 0xb8, 0xc2, 0x9c, 0x31, 0x68, 0x1f, 0x42, 0xfb, 0x0b, 0xfb, 0x90, 0xdd,
	0x84, 0x18, 0xb9, 0x07, 0x5d, 0xb7, 0x75, 0x54, 0x9d, 0x7e, 0x77, 0x0d, 0x5d, 0x3a, 0x91, 0x7c,
	0x06, 0xc1, 0x2c, 0x99, 0x91, 0x8f, 0xa1, 0x53, 0x75, 0x60, 0x75, 0x6e, 0xb7, 0x2d, 0x6b, 0xda,
	0x3b, 0xcd, 0x73, 0xcf, 0x9b, 0x87, 0xd6, 0x78, 0xff, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x94,
	0x01, 0x8a, 0x46, 0x0e, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HodDBClient is the client API for HodDB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HodDBClient interface {
	Select(ctx context.Context, in *SelectQuery, opts ...grpc.CallOption) (*Response, error)
	Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*SelectQuery, error)
	Count(ctx context.Context, in *SelectQuery, opts ...grpc.CallOption) (*Response, error)
	Versions(ctx context.Context, in *VersionQuery, opts ...grpc.CallOption) (*Response, error)
}

type hodDBClient struct {
	cc *grpc.ClientConn
}

func NewHodDBClient(cc *grpc.ClientConn) HodDBClient {
	return &hodDBClient{cc}
}

func (c *hodDBClient) Select(ctx context.Context, in *SelectQuery, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.HodDB/Select", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hodDBClient) Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*SelectQuery, error) {
	out := new(SelectQuery)
	err := c.cc.Invoke(ctx, "/proto.HodDB/Parse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hodDBClient) Count(ctx context.Context, in *SelectQuery, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.HodDB/Count", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hodDBClient) Versions(ctx context.Context, in *VersionQuery, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.HodDB/Versions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HodDBServer is the server API for HodDB service.
type HodDBServer interface {
	Select(context.Context, *SelectQuery) (*Response, error)
	Parse(context.Context, *ParseRequest) (*SelectQuery, error)
	Count(context.Context, *SelectQuery) (*Response, error)
	Versions(context.Context, *VersionQuery) (*Response, error)
}

// UnimplementedHodDBServer can be embedded to have forward compatible implementations.
type UnimplementedHodDBServer struct {
}

func (*UnimplementedHodDBServer) Select(ctx context.Context, req *SelectQuery) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Select not implemented")
}
func (*UnimplementedHodDBServer) Parse(ctx context.Context, req *ParseRequest) (*SelectQuery, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Parse not implemented")
}
func (*UnimplementedHodDBServer) Count(ctx context.Context, req *SelectQuery) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Count not implemented")
}
func (*UnimplementedHodDBServer) Versions(ctx context.Context, req *VersionQuery) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Versions not implemented")
}

func RegisterHodDBServer(s *grpc.Server, srv HodDBServer) {
	s.RegisterService(&_HodDB_serviceDesc, srv)
}

func _HodDB_Select_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelectQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HodDBServer).Select(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HodDB/Select",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HodDBServer).Select(ctx, req.(*SelectQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _HodDB_Parse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HodDBServer).Parse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HodDB/Parse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HodDBServer).Parse(ctx, req.(*ParseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HodDB_Count_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelectQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HodDBServer).Count(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HodDB/Count",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HodDBServer).Count(ctx, req.(*SelectQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _HodDB_Versions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HodDBServer).Versions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HodDB/Versions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HodDBServer).Versions(ctx, req.(*VersionQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _HodDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HodDB",
	HandlerType: (*HodDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Select",
			Handler:    _HodDB_Select_Handler,
		},
		{
			MethodName: "Parse",
			Handler:    _HodDB_Parse_Handler,
		},
		{
			MethodName: "Count",
			Handler:    _HodDB_Count_Handler,
		},
		{
			MethodName: "Versions",
			Handler:    _HodDB_Versions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "log.proto",
}

// P2PClient is the client API for P2P service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type P2PClient interface {
	Request(ctx context.Context, in *TupleRequest, opts ...grpc.CallOption) (P2P_RequestClient, error)
}

type p2PClient struct {
	cc *grpc.ClientConn
}

func NewP2PClient(cc *grpc.ClientConn) P2PClient {
	return &p2PClient{cc}
}

func (c *p2PClient) Request(ctx context.Context, in *TupleRequest, opts ...grpc.CallOption) (P2P_RequestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_P2P_serviceDesc.Streams[0], "/proto.P2P/Request", opts...)
	if err != nil {
		return nil, err
	}
	x := &p2PRequestClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type P2P_RequestClient interface {
	Recv() (*TupleUpdate, error)
	grpc.ClientStream
}

type p2PRequestClient struct {
	grpc.ClientStream
}

func (x *p2PRequestClient) Recv() (*TupleUpdate, error) {
	m := new(TupleUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// P2PServer is the server API for P2P service.
type P2PServer interface {
	Request(*TupleRequest, P2P_RequestServer) error
}

// UnimplementedP2PServer can be embedded to have forward compatible implementations.
type UnimplementedP2PServer struct {
}

func (*UnimplementedP2PServer) Request(req *TupleRequest, srv P2P_RequestServer) error {
	return status.Errorf(codes.Unimplemented, "method Request not implemented")
}

func RegisterP2PServer(s *grpc.Server, srv P2PServer) {
	s.RegisterService(&_P2P_serviceDesc, srv)
}

func _P2P_Request_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TupleRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(P2PServer).Request(m, &p2PRequestServer{stream})
}

type P2P_RequestServer interface {
	Send(*TupleUpdate) error
	grpc.ServerStream
}

type p2PRequestServer struct {
	grpc.ServerStream
}

func (x *p2PRequestServer) Send(m *TupleUpdate) error {
	return x.ServerStream.SendMsg(m)
}

var _P2P_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.P2P",
	HandlerType: (*P2PServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Request",
			Handler:       _P2P_Request_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "log.proto",
}
